// Grid
// ============================================


// Float grid only when on their respective viewport
// --------------------------------------------

%float-xs {
  @include respond(phone) {
    float: left;
  }
}

%float-sm {
  @include respond(phablet) {
    float: left;
  }
}

%float-md {
  @include respond(tablet) {
    float: left;
  }
}

%float-lg {
  @include respond(standard) {
    float: left;
  }
}


// Grid System
// --------------------------------------------

// Gutter need to be divided. One for left padding, and one for right padding.
$gutter-width : $default-gutter-width/2;

@function gutter() {
  $gutter: $gutter-width;
  @return $gutter;
}

// centering page horizontally
.container {
  @extend %clearfix;
  margin-left: auto;
  margin-right: auto;
  padding-left: gutter();
  padding-right: gutter();

  @include respond(phablet) {
    width: 750px;
  }
  @include respond(tablet) {
    width: 960px;
  }
  @include respond(standard) {
    width: 1200px;
  }
}

// grid wrapper
.row {
  @extend %clearfix;
  margin-left: gutter() * -1;
  margin-right: gutter() * -1;
}

[class*="col"] {
  min-height: 1px;
  padding-left: gutter();
  padding-right: gutter();
}

@for $i from 1 through $default-column-number {

  .col-xs-#{$i} {
    @extend %float-xs;

    @include respond(phone) {
      width: ($i/$default-column-number)*100%;
    }
  }
  .offset-xs-#{$i} {
    @include respond(phone) {
      margin-left: ($i/$default-column-number)*100%;
    }
  }

  .col-sm-#{$i} {
    @extend %float-sm;
    
    @include respond(phablet) {
      width: ($i/$default-column-number)*100%;
    }
  }
  .offset-sm-#{$i} {
    @include respond(phablet) {
      margin-left: ($i/$default-column-number)*100%;
    }
  }
  
  .col-md-#{$i} {
    @extend %float-md;
    
    @include respond(tablet) {
      width: ($i/$default-column-number)*100%;
    }
  }
  .offset-md-#{$i} {
    @include respond(tablet) {
      margin-left: ($i/$default-column-number)*100%;
    }
  }

  .col-lg-#{$i} {
    @extend %float-lg;

    @include respond(standard) {
      width: ($i/$default-column-number)*100%;
    }
  }
  .offset-lg-#{$i} {
    @include respond(standard) {
      margin-left: ($i/$default-column-number)*100%;
    }
  }
}

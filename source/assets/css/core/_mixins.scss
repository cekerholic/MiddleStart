// Global Mixins
// ============================================


// Absolute Position Shorthand
// --------------------------------------------
@mixin absolute(
  $d-left: 0,
  $d-top: 0,
  $d-width: false,
  $d-height: false,
  $d-right: false,
  $d-bottom: false
  ) {
  position: absolute;
  left: $d-left;
  top: $d-top;

  @if $d-width {
    width: $d-width;
  }
  @if $d-height {
    height: $d-height;
  }
  @if $d-right {
    right: $d-right;
  }
  @if $d-bottom {
    bottom: $d-bottom;
  }
}


// Gradient background
// shorthand for CSS gradient + IE hacks (IE hacks for linear gradient only)
// Default value is simply make the second color 10% darker than base color
// --------------------------------------------

$grad-color-def : #0b859f;
$grad-value : 10%;
$grad-value-def : 10%;

@mixin gradient(
  $color: $grad-color-def, // Hexa/RGB/RGBA/HSL/HSLA/predefined. Base color.
  $second-color: false, // Value: Hexa/RGB/RGBA/HSL/HSLA/predefined. Second color.
  $value: false, // Percent. Get second color by darkening or lightening base color.
  $to-light: false, // Boolean. Make second color lighter than base color.
  $radial: false // Boolean. Make radial gradient
  ) {

  @if not $radial {
    @if not $second-color {
      @if $value and not $to-light {
        background-image: linear-gradient( $color, darken($color, $value) );
      }
      @if $value and $to-light {
        background-image: linear-gradient( $color, lighten($color, $value) );
      }
      @if not $value and $to-light {
        background-image: linear-gradient( $color, lighten($color, $grad-value-def) );
      }
      @if not $value and not $to-light {
        background-image: linear-gradient( $color, darken($color, $grad-value-def) );
      }
    }
    @else {
      background-image: linear-gradient( $color, $second-color );
    }
  }
  // Radial
  @else {
    @if not $second-color {
      @if $value and not $to-light {
        background-image: radial-gradient( $color, darken($color, $value) );
      }
      @if $value and $to-light {
        background-image: radial-gradient( $color, lighten($color, $value) );
      }
      @if not $value and $to-light {
        background-image: radial-gradient( $color, lighten($color, $grad-value-def) );
      }
      @if not $value and not $to-light {
        background-image: radial-gradient( $color, darken($color, $grad-value-def) );
      }
    }
    @else {
      background-image: radial-gradient( $color, $second-color );
    }
  }
}


// Reset List
// Remove list style and left padding from list
// --------------------------------------------

@mixin list-unstyled {
  list-style: none;
  margin-bottom: 0;
  padding-left: 0;
} 


// Links
// Set link color at various state (normal/:visited, :hover, :active)
// --------------------------------------------

@mixin link(
  $link-col: $link,
  $link-hover: false,
  $link-active: false
  ) {
  color: $link-col;

  @if not $link-hover and not $link-active {
    &:hover, &:active  {
      color: darken($link-col, 10%);
    }
  }
  @if $link-hover and not $link-active {
    &:hover, &:active {
      color: $link-hover;
    }
  }
  @if not $link-hover and $link-active {
    &:active {
      color: $link-active;
    }
  }
  @if $link-hover and $link-active {
    &:hover {
      color: $link-hover;
    }
    &:active {
      color: $link-active;
    }
  }
}


// Selection
// Set background and text color when user do text selection
// --------------------------------------------

@mixin selection($background, $color, $element:false) {
  @if($element) {
    &::-moz-selection{ background:$background; color:$color; text-shadow:none; }
    &::selection { background:$background; color:$color; text-shadow:none; }
    } @else {
      ::-moz-selection{ background:$background; color:$color; text-shadow:none; }
      ::selection { background:$background; color:$color; text-shadow:none; }
  }
}


// Media Queries
// Media queries for various breakpoints (setting breakpoints in settings.scss)
// --------------------------------------------

@mixin respond($media: true, $query-width-min: false, $query-width-max: false) {
  @if $media == standard {
    @media (min-width: $screen-standard) { @content; }
  }
  @else if $media == tablet {
    @media (min-width: $screen-tablet) { @content; }
  }
  @else if $media == phablet {
    @media (min-width: $screen-phablet) { @content; }
  }
  @else if $media == phone {
    @media (max-width: $screen-phone) { @content; }
  }
  @else if $media == phone-narrow {
    @media (min-width: $screen-phone-narrow) { @content; }
  }
  @else if not $media {
    @media (min-width: $query-width-min) and (max-width: $query-width-max) { @content; }
  }
}


// Tab focus
// form element style when navigating using tab key
// --------------------------------------------

@mixin tab-focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}


// Input focus
// form element style on :focus
// --------------------------------------------

@mixin input-focus($color: #66afe9) {
  $color-rgba: rgba(red($color), green($color), blue($color), .6);
  &:focus {
    border-color: $color;
    outline: 0;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba);
  }
}


// Placeholder
// form element placeholder color
// --------------------------------------------

@mixin placeholder($color: $silver) {
  &:-moz-placeholder            { color: $color; } // Firefox 4-18
  &::-moz-placeholder           { color: $color; } // Firefox 19+
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}


// Button
// Button styling on various state(normal, :hover, :active, disabled)
// --------------------------------------------

@mixin button-color($color, $background, $border) {
  background-color: $background;
  border-color: $border;
  color: $color;

  &:hover,
  &:focus,
  &:active,
  &.active {
    background-color: darken($background, 8%);
    border-color: darken($border, 12%);
    color: $color;
  }
  &:active,
  &.active {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
      border-color: $border;
    }
  }
}

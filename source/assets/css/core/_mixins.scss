// Custom Mixins Library
// --------------------------------------------------------------------------



// Drop-down menu
@mixin dropdown(
  $d-left: 0,
  $d-top: 0,
  $d-width: false,
  $d-height: false,
  $d-right: false,
  $d-bottom: false
  ) {
  position: absolute;
  left: $d-left;
  top: $d-top;

  @if $d-width {
    width: $d-width;
  }
  @if $d-height {
    height: $d-height;
  }
  @if $d-right {
    right: $d-right;
  }
  @if $d-bottom {
    bottom: $d-bottom;
  }
}


// Gradient background
// shorthand for gradient + include IE hacks
// --------------------------------------------------------------------------

//Light to Dark
//base color, darken color (in percent)
$grad-c-def : #0b859f;
$grad-value : 10%;
$grad-value-def : 10%;

@mixin grad-dark(
  $grad-c: $grad-c-def,
  $grad-value: false,
  $grad-2: false
  ) {
  @if not $grad-value and not $grad-2 {
    @include filter-gradient($grad-c, darken($grad-c, $grad-value-def)); /* for IE9 & below */
    @include background-image(linear-gradient($grad-c, darken($grad-c, $grad-value-def)));
  }
  @if $grad-value and not $grad-2 {
    @include filter-gradient($grad-c, darken($grad-c, $grad-value)); /* for IE9 & below */
    @include background-image(linear-gradient($grad-c, darken($grad-c, $grad-value)));
  }
  @if not $grad-value and $grad-2 {
    @include filter-gradient($grad-c, $grad-2); /* for IE9 & below */
    @include background-image(linear-gradient($grad-c, $grad-2));
  }
}
  
//Dark to Light
//base color, lighten color (in percent)
@mixin grad-light(
  $grad-c: $grad-c-def,
  $grad-value: false
  ) {
  @include filter-gradient($grad-c, lighten($grad-c, $grad-value-def)); /* for IE9 & below */
  @include background-image(linear-gradient($grad-c, lighten($grad-c, $grad-value-def)));

  @if $grad-value {
    @include filter-gradient($grad-c, lighten($grad-c, $grad-value)); /* for IE9 & below */
    @include background-image(linear-gradient($grad-c, lighten($grad-c, $grad-value)));
  }
}
  

// Reset List
@mixin list-unstyled {
  list-style: none;
  padding-left: 0;
} 

// Links
@mixin link(
  $link-col: $link,
  $link-hover: false,
  $link-active: false
  ) {
  color: $link-col;

  @if not $link-hover and not $link-active {
    &:hover, &:active  {
      color: darken($link-col, 10%);
    }
  }
  @if $link-hover and not $link-active {
    &:hover, &:active {
      color: $link-hover;
    }
  }
  @if not $link-hover and $link-active {
    &:active {
      color: $link-active;
    }
  }
  @if $link-hover and $link-active {
    &:hover {
      color: $link-hover;
    }
    &:active {
      color: $link-active;
    }
  }
}

// Selection
@mixin selection($background, $color, $element:false) {
  @if($element) {
    &::-moz-selection{ background:$background; color:$color; text-shadow:none; }
    &::selection { background:$background; color:$color; text-shadow:none; }
    } @else {
      ::-moz-selection{ background:$background; color:$color; text-shadow:none; }
      ::selection { background:$background; color:$color; text-shadow:none; }
  }
}

// Media Queries

@mixin respond($media: true, $query-width-min: false, $query-width-max: false) {
  @if $media == wide {
    @media (min-width: $screen-wide) { @content; }
  }
  @if $media == standard {
    @media (min-width: $screen-standard) { @content; }
  }
  @else if $media == tablet {
    @media (min-width: $screen-tablet) { @content; }
  }
  @else if $media == phablet {
    @media (min-width: $screen-phablet) { @content; }
  }
  @else if $media == phone {
    @media (max-width: $screen-phone) { @content; }
  }
  @else if $media == phone-narrow {
    @media (min-width: $screen-phone-narrow) { @content; }
  }
  @else if not $media {
    @media (min-width: $query-width-min) and (max-width: $query-width-max) { @content; }
  }
}


@mixin tab-focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

@mixin input-focus($color: #66afe9) {
  $color-rgba: rgba(red($color), green($color), blue($color), .6);
  &:focus {
    border-color: $color;
    outline: 0;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba);
  }
}

@mixin placeholder($color: $silver) {
  &:-moz-placeholder            { color: $color; } // Firefox 4-18
  &::-moz-placeholder           { color: $color; } // Firefox 19+
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

@mixin button-color($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus,
  &:active,
  &.active {
    color: $color;
    background-color: darken($background, 8%);
    border-color: darken($border, 12%);
  }
  &:active,
  &.active {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
      border-color: $border;
    }
  }
}
